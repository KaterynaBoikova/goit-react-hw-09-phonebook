{"version":3,"sources":["Redux/Phonebook/contacts-reducer.js","Redux/Authentification/auth-reducer.js","Redux/store.js","Redux/Authentification/auth-selectors.js","Components/Navigation/Navigation.js","Components/UserMenu/UserMenu.js","Components/Navigation/AuthMenu.js","Components/AppNav.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","index.js","Redux/Phonebook/contacts-actions.js","Styles/AppNav.module.css","Redux/Authentification/auth-operations.js","Styles/UserMenu.module.css","Components/Layout/Layout.js","Redux/Authentification/auth-actions.js"],"names":["contacts","createReducer","actions","fetchContactsSuccess","state","action","payload","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","combineReducers","initialStateUser","name","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","currentUserSuccess","token","isLoggedIn","registerError","loginError","currentUserError","error","logoutError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","loggedInPersistConfig","key","storage","whitelist","store","configureStore","reducer","userData","persistReducer","userReducer","phonebook","contactsReducer","persistor","persistStore","Navigation","useSelector","authSelectors","to","exact","className","styles","nav_link","activeClassName","nav_link_active","UserMenu","userMail","dispatch","useDispatch","userDiv","CssBaseline","Avatar","avatar","Typography","userName","Button","type","color","onClick","authOperations","userLogout","AppNav","isUserLoggedIn","Layout","sectionCN","sectionNav","header","AuthMenu","PrivateRoute","isAuthenticated","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","PhonebookView","RegisterView","LoginView","App","useEffect","getCurrentUser","fallback","height","width","style","textAlign","path","ReactDOM","render","StrictMode","document","getElementById","createAction","module","exports","axios","defaults","baseURL","headers","common","Authorization","userRegister","inputData","newUser","password","registerRequest","post","then","data","catch","message","userLogin","loginRequest","logoutRequest","getState","tokenIn","currentUserRequest","get","containerCN","maxWidth"],"mappings":"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","file":"static/js/main.92159c64.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\n\nconst contacts = createReducer([], {\n    [actions.fetchContactsSuccess]: (state, action)=>{return action.payload},\n    [actions.addContactSuccess]: (state, action)=>{return[...state, action.payload]},\n    [actions.deleteContactSuccess]: (state, action)=>{ return state.filter(({ id }) => id !== action.payload)},\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (state, action)=>action.payload,\n});\n\nconst loading = createReducer(false, {\n    [actions.fetchContactsRequest]: ()=>true,\n    [actions.fetchContactsSuccess]: ()=>false,\n    [actions.fetchContactsError]: ()=>false,\n    [actions.addContactRequest]: ()=>true,\n    [actions.addContactSuccess]: ()=>false,\n    [actions.addContactError]: ()=>false,\n    [actions.deleteContactRequest]: ()=>true,\n    [actions.deleteContactSuccess]: ()=>false,\n    [actions.deleteContactError]: ()=>false,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n    loading,\n});","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialStateUser = {name: null, email: null};\n\nconst user = createReducer(initialStateUser, {\n    [authActions.registerSuccess]: (state, action)=>{return action.payload.user},\n    [authActions.loginSuccess]: (state, action)=>{return action.payload.user},\n    [authActions.logoutSuccess]: () => initialStateUser,\n    [authActions.currentUserSuccess]: (state, action) => action.payload,\n});\n\nconst token = createReducer('', {\n    [authActions.registerSuccess]: (state, action) => action.payload.token,\n    [authActions.loginSuccess]: (state, action) => action.payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst isLoggedIn = createReducer('', {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.currentUserError]: () => false,\n    [authActions.currentUserSuccess]: () => true,\n});\n\nconst error = createReducer('', {\n    [authActions.registerError]: (state, action)=>{return action.payload},\n    [authActions.loginError]: (state, action)=>{return action.payload},\n    [authActions.logoutError]: (state, action)=>{return action.payload},\n    [authActions.currentUserError]: (state, action)=>{return action.payload},\n});\n\nexport default combineReducers({\n    user,\n    isLoggedIn,\n    token,\n    error,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './Phonebook/contacts-reducer';\nimport userReducer from './Authentification/auth-reducer'\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n];\n\nconst loggedInPersistConfig = {\n    key: 'loggedIn',\n    storage,\n    whitelist: ['token'],\n};\n\n\nconst store = configureStore({\n    reducer: {\n        userData: persistReducer(loggedInPersistConfig, userReducer),\n        phonebook: contactsReducer,\n    },\n    middleware: middleware,\n    //devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n\n","const getIsLoggedIn = state => state.userData.isLoggedIn;\nconst getUserMail = state => state.userData.user.email;\n\nexport default {\n    getIsLoggedIn,\n    getUserMail,\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../Redux/Authentification/auth-selectors\";\nimport styles from \"../../Styles/AppNav.module.css\";\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.nav_link}\n        activeClassName={styles.nav_link_active}\n      >\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          className={styles.nav_link}\n          activeClassName={styles.nav_link_active}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authOperations from \"../../Redux/Authentification/auth-operations\";\nimport authSelectors from \"../../Redux/Authentification/auth-selectors\";\nimport { Avatar, Button, CssBaseline, Typography } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport styles from \"../../Styles/UserMenu.module.css\";\n\nexport default function UserMenu() {\n  const userMail = useSelector(authSelectors.getUserMail);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.userDiv}>\n      <CssBaseline />\n      <Avatar className={styles.avatar}>\n        <AccountCircleIcon />\n      </Avatar>\n      <Typography className={styles.userName}>{userMail}</Typography>\n      <Button\n        type=\"button\"\n        color=\"inherit\"\n        onClick={() => dispatch(authOperations.userLogout())}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../../Styles/AppNav.module.css'\n\nconst Navigation = () => (\n    <div>\n        <NavLink to=\"/register\"\n                 exact\n                 className={styles.nav_link}\n                 activeClassName={styles.nav_link_active}>Register</NavLink>\n        <NavLink to=\"/login\"\n                 className={styles.nav_link}\n                 activeClassName={styles.nav_link_active}>Login</NavLink>\n    </div>\n);\n\nexport default Navigation;","import React from \"react\";\nimport Navigation from \"./Navigation/Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthMenu from \"./Navigation/AuthMenu\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../Redux/Authentification/auth-selectors\";\nimport styles from \"../Styles/AppNav.module.css\";\nimport Layout from \"./Layout/Layout\";\n\nexport default function AppNav() {\n  const isUserLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Layout sectionCN={styles.sectionNav}>\n      <header className={styles.header}>\n        <Navigation />\n        {isUserLoggedIn ? <UserMenu /> : <AuthMenu />}\n      </header>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../Redux/Authentification/auth-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../Redux/Authentification/auth-selectors\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { useDispatch } from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport authOperations from \"./Redux/Authentification/auth-operations\";\nimport AppNav from \"./Components/AppNav\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PublicRoute from \"./Components/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./Views/HomeView\" /* webpackChunkName: \"home\" */)\n);\nconst PhonebookView = lazy(() =>\n  import(\"./Views/PhonebookView\" /* webpackChunkName: \"phonebook\" */)\n);\nconst RegisterView = lazy(() =>\n  import(\"./Views/RegisterView\" /* webpackChunkName: \"register\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./Views/LoginView\" /* webpackChunkName: \"login\" */)\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CssBaseline />\n      <AppNav />\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"teal\"\n            height={130}\n            width={130}\n            style={{\n              textAlign: \"center\",\n            }}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <PhonebookView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n\n\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppNav_header__34y_i\",\"sectionNav\":\"AppNav_sectionNav__3rRY-\",\"nav_link\":\"AppNav_nav_link__sLewY\",\"nav_link_active\":\"AppNav_nav_link_active__K9qBw\"};","import axios from \"axios\";\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst userRegister = inputData => dispatch=>{\n    const newUser={\n        name: inputData.name, email: inputData.email, password: inputData.password,\n    };\n    dispatch(authActions.registerRequest());\n\n    axios.post('/users/signup', newUser)\n        .then(({data})=>{\n            token.set(data.token);\n            dispatch(authActions.registerSuccess(data));\n        })\n        .catch(error=>dispatch(authActions.registerError(error.message)))\n};\n\nconst userLogin = inputData => dispatch=>{\n    const userData={\n      email: inputData.email, password: inputData.password,\n    };\n    dispatch(authActions.loginRequest());\n\n    axios.post('/users/login', userData)\n        .then(({data})=>{\n            token.set(data.token);\n            dispatch(authActions.loginSuccess(data))})\n        .catch(error=>dispatch(authActions.registerError(error.message)))\n};\n\nconst userLogout = () => dispatch=>{\n    dispatch(authActions.logoutRequest());\n    axios.post('/users/logout')\n        .then(()=>{\n            token.unset();\n            dispatch(authActions.logoutSuccess())})\n        .catch(error=>dispatch(authActions.logoutError(error.message)))\n};\n\nconst getCurrentUser = () => (dispatch, getState) =>{\n    const tokenIn = getState().userData.token;\n    if (!tokenIn) {return;}\n    token.set(tokenIn);\n\n    dispatch(authActions.currentUserRequest());\n\n    axios.get('/users/current')\n        .then(({data})=>dispatch(authActions.currentUserSuccess(data)))\n        .catch(error=>dispatch(authActions.currentUserError(error.message)));\n};\n\nexport default {userRegister, userLogin, userLogout, getCurrentUser};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDiv\":\"UserMenu_userDiv__2b3BJ\",\"userName\":\"UserMenu_userName__1NrI5\",\"avatar\":\"UserMenu_avatar__o4hi4\"};","import React from 'react';\nimport {Container} from '@material-ui/core';\n\nconst Layout = ({ sectionCN, containerCN, children }) => (\n    <section className={sectionCN}>\n        <Container maxWidth=\"lg\" className={containerCN}>\n        {children}\n        </Container>\n    </section>\n);\n\nexport default Layout;","import { createAction } from '@reduxjs/toolkit';\n\nconst loginRequest = createAction('contacts/loginRequest');\nconst loginSuccess = createAction('contacts/loginSuccess');\nconst loginError = createAction('contacts/loginError');\n\nconst registerRequest = createAction('contacts/registerRequest');\nconst registerSuccess = createAction('contacts/registerSuccess');\nconst registerError = createAction('contacts/registerError');\n\nconst logoutRequest = createAction('contacts/logoutRequest');\nconst logoutSuccess = createAction('contacts/logoutSuccess');\nconst logoutError = createAction('contacts/logoutError');\n\nconst currentUserRequest = createAction('contacts/currentUserRequest');\nconst currentUserSuccess = createAction('contacts/currentUserSuccess');\nconst currentUserError = createAction('contacts/currentUserError');\n\nexport default {\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutError,\n    logoutRequest,\n    logoutSuccess,\n    registerError,\n    registerRequest,\n    registerSuccess,\n    currentUserError,\n    currentUserRequest,\n    currentUserSuccess\n};"],"sourceRoot":""}