{"version":3,"sources":["Styles/RegisterViewLoginView.module.css","Views/RegisterView.js"],"names":["module","exports","RegisterView","useState","email","password","name","newUser","setNewUser","dispatch","useDispatch","handleChange","event","currentTarget","value","prev","component","maxWidth","className","styles","paper","avatar","variant","textReg","onSubmit","preventDefault","authOperations","userRegister","autoComplete","form","container","spacing","item","xs","textfield","required","id","label","type","pattern","title","onChange","fullWidth","color","btnMain"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,oCAAoC,UAAY,yCAAyC,MAAQ,qCAAqC,OAAS,sCAAsC,QAAU,uCAAuC,QAAU,yC,qPCe1P,SAASC,IACtB,MAA8BC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,GAAIC,KAAM,KAAxE,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,IAAIN,EAAOM,EAAMC,cAAcP,KAC3BQ,EAAQF,EAAMC,cAAcC,MAChCN,GAAW,SAACO,GAAD,mBAAC,eACPA,GADM,kBAERT,EAAOQ,QAgBZ,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAWE,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC,IAAD,IACA,sBAAKC,UAAWC,IAAOC,MAAvB,UACE,cAAC,IAAD,CAAQF,UAAWC,IAAOE,OAA1B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKJ,UAAWC,IAAOI,QAA1D,sBAGA,uBACEC,SAxBW,SAACZ,GACpBA,EAAMa,iBACNhB,EACEiB,IAAeC,aAAa,CAC1BrB,KAAMC,EAAQD,KACdF,MAAOG,EAAQH,MACfC,SAAUE,EAAQF,YAGtBG,EAAW,CAAEJ,MAAO,GAAIC,SAAU,GAAIC,KAAM,MAgBpCsB,aAAa,MACbV,UAAWC,IAAOU,KAHpB,UAKE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEf,UAAWC,IAAOe,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,OACNf,QAAQ,WACRgB,KAAK,OACLhC,KAAK,OACLiC,QAAQ,yHACRC,MAAM,kcACN1B,MAAOP,EAAQD,KACfmC,SAAU9B,MAGd,cAAC,IAAD,CAAMqB,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEf,UAAWC,IAAOe,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNf,QAAQ,WACRgB,KAAK,QACLhC,KAAK,QACLQ,MAAOP,EAAQH,MACfqC,SAAU9B,MAGd,cAAC,IAAD,CAAMqB,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEf,UAAWC,IAAOe,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNf,QAAQ,WACRgB,KAAK,WACLhC,KAAK,WACLQ,MAAOP,EAAQF,SACfoC,SAAU9B,SAIhB,cAAC,IAAD,CACE2B,KAAK,SACLI,WAAS,EACTpB,QAAQ,YACRqB,MAAM,UACNzB,UAAWC,IAAOyB,QALpB","file":"static/js/register.01d4263e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterViewLoginView_form__2T2bA\",\"textfield\":\"RegisterViewLoginView_textfield__2qG-k\",\"paper\":\"RegisterViewLoginView_paper__2kQ4d\",\"avatar\":\"RegisterViewLoginView_avatar__37Amm\",\"textReg\":\"RegisterViewLoginView_textReg__3JJs9\",\"btnMain\":\"RegisterViewLoginView_btnMain__3V4EJ\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../Redux/Authentification/auth-operations\";\nimport Layout from \"../Components/Layout/Layout\";\nimport {\n  TextField,\n  Avatar,\n  Typography,\n  Grid,\n  Container,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport styles from \"../Styles/RegisterViewLoginView.module.css\";\n\nexport default function RegisterView() {\n  const [newUser, setNewUser] = useState({ email: \"\", password: \"\", name: \"\" });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    let name = event.currentTarget.name;\n    let value = event.currentTarget.value;\n    setNewUser((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      authOperations.userRegister({\n        name: newUser.name,\n        email: newUser.email,\n        password: newUser.password,\n      })\n    );\n    setNewUser({ email: \"\", password: \"\", name: \"\" });\n  };\n\n  return (\n    <Layout>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" className={styles.textReg}>\n            Register\n          </Typography>\n          <form\n            onSubmit={handleSubmit}\n            autoComplete=\"off\"\n            className={styles.form}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  value={newUser.name}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={newUser.email}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={newUser.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.btnMain}\n            >\n              Register\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}