{"version":3,"sources":["Styles/RegisterViewLoginView.module.css","Views/RegisterView.js"],"names":["module","exports","RegisterView","useState","email","setEmail","password","setPassword","name","setName","dispatch","useDispatch","component","maxWidth","className","styles","paper","avatar","variant","textReg","onSubmit","event","preventDefault","authOperations","userRegister","autoComplete","form","container","spacing","item","xs","textfield","required","id","label","type","pattern","title","value","onChange","currentTarget","fullWidth","color","btnMain"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,oCAAoC,UAAY,yCAAyC,MAAQ,qCAAqC,OAAS,sCAAsC,QAAU,uCAAuC,QAAU,yC,sOCe1P,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAWC,cA2BjB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC,IAAD,IACA,sBAAKC,UAAWC,IAAOC,MAAvB,UACE,cAAC,IAAD,CAAQF,UAAWC,IAAOE,OAA1B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKJ,UAAWC,IAAOI,QAA1D,sBAGA,uBACEC,SA3BW,SAACC,GACpBA,EAAMC,iBACNZ,EACEa,IAAeC,aAAa,CAC1BhB,KAAMA,EACNJ,MAAOA,EACPE,SAAUA,KAIdC,EAAY,IACZF,EAAS,IACTI,EAAQ,KAgBAgB,aAAa,MACbX,UAAWC,IAAOW,KAHpB,UAKE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEhB,UAAWC,IAAOgB,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,OACNhB,QAAQ,WACRiB,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,kcACNC,MAAO9B,EACP+B,SAhDS,SAAClB,GACxBZ,EAAQY,EAAMmB,cAAcF,YAkDlB,cAAC,IAAD,CAAMT,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEhB,UAAWC,IAAOgB,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNhB,QAAQ,WACRiB,KAAK,QACL3B,KAAK,QACL8B,MAAOlC,EACPmC,SAnEU,SAAClB,GACzBhB,EAASgB,EAAMmB,cAAcF,YAqEnB,cAAC,IAAD,CAAMT,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEhB,UAAWC,IAAOgB,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNhB,QAAQ,WACRiB,KAAK,WACL3B,KAAK,WACL8B,MAAOhC,EACPiC,SA7Ea,SAAClB,GAC5Bd,EAAYc,EAAMmB,cAAcF,eAgFxB,cAAC,IAAD,CACEH,KAAK,SACLM,WAAS,EACTvB,QAAQ,YACRwB,MAAM,UACN5B,UAAWC,IAAO4B,QALpB","file":"static/js/register.58f70df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterViewLoginView_form__2T2bA\",\"textfield\":\"RegisterViewLoginView_textfield__2qG-k\",\"paper\":\"RegisterViewLoginView_paper__2kQ4d\",\"avatar\":\"RegisterViewLoginView_avatar__37Amm\",\"textReg\":\"RegisterViewLoginView_textReg__3JJs9\",\"btnMain\":\"RegisterViewLoginView_btnMain__3V4EJ\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../Redux/Authentification/auth-operations\";\nimport Layout from \"../Components/Layout/Layout\";\nimport {\n  TextField,\n  Avatar,\n  Typography,\n  Grid,\n  Container,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport styles from \"../Styles/RegisterViewLoginView.module.css\";\n\nexport default function RegisterView() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleChangeEmail = (event) => {\n    setEmail(event.currentTarget.value);\n  };\n  const handleChangePassword = (event) => {\n    setPassword(event.currentTarget.value);\n  };\n  const handleChangeName = (event) => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      authOperations.userRegister({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n\n    setPassword(\"\");\n    setEmail(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <Layout>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" className={styles.textReg}>\n            Register\n          </Typography>\n          <form\n            onSubmit={handleSubmit}\n            autoComplete=\"off\"\n            className={styles.form}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  value={name}\n                  onChange={handleChangeName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={handleChangeEmail}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={styles.textfield}\n                  required\n                  id=\"outlined-required\"\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={handleChangePassword}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.btnMain}\n            >\n              Register\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}